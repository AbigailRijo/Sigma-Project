// <auto-generated />
using System;
using DataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190603214900_bookingTables")]
    partial class bookingTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Data.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Adults");

                    b.Property<int>("Childrens");

                    b.Property<string>("CreatedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifyedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifyedDate");

                    b.Property<int>("Nights");

                    b.Property<string>("Number");

                    b.Property<DateTime>("Since");

                    b.Property<int>("Status");

                    b.Property<string>("StatusDescription");

                    b.Property<decimal>("Taxes");

                    b.Property<decimal>("Total");

                    b.Property<DateTime>("Until");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("DataLayer.Data.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int>("AgeQualifying");

                    b.Property<string>("AgeQualifyingDescription");

                    b.Property<string>("CreatedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifyedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifyedDate");

                    b.Property<string>("Name");

                    b.Property<int>("RoomId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("DataLayer.Data.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("ImageURL");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifyedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifyedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("DataLayer.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Adults");

                    b.Property<int>("BookingId");

                    b.Property<int>("Chindren");

                    b.Property<string>("CreatedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifyedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifyedDate");

                    b.Property<int?>("RommTypeId");

                    b.Property<int>("RoomTypeId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RommTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DataLayer.Data.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("CreatedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("ImageURL");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifyedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifyedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("DataLayer.Data.Models.Tranfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("DestinationCode");

                    b.Property<int>("DestinationType");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifyedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifyedDate");

                    b.Property<string>("OriginCode");

                    b.Property<int>("OriginType");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Tranfers");
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("ModifyedByUser")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifyedDate");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2019, 6, 3, 17, 48, 59, 723, DateTimeKind.Local).AddTicks(8144),
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Admin",
                            ModifyedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "LY2TluXFMaUK7hjiqR+E+VQjU43eWO0v7Pl6wXvrNOc=",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("DataLayer.Data.Models.Booking", b =>
                {
                    b.HasOne("DataLayer.Data.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataLayer.Data.Models.Guest", b =>
                {
                    b.HasOne("DataLayer.Data.Models.Room", "Room")
                        .WithMany("Guets")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataLayer.Data.Models.Room", b =>
                {
                    b.HasOne("DataLayer.Data.Models.Booking", "Booking")
                        .WithMany("Rooms")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataLayer.Data.Models.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RommTypeId");
                });

            modelBuilder.Entity("DataLayer.Data.Models.Tranfer", b =>
                {
                    b.HasOne("DataLayer.Data.Models.Booking")
                        .WithMany("Tranfers")
                        .HasForeignKey("BookingId");
                });
#pragma warning restore 612, 618
        }
    }
}
